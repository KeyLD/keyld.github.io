<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="https://keyld.github.io//feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.2.1">Jekyll</generator><link href="https://keyld.github.io//feed.xml" rel="self" type="application/atom+xml" /><link href="https://keyld.github.io//" rel="alternate" type="text/html" /><updated>2017-02-15T19:36:21+08:00</updated><id>https://keyld.github.io//</id><title type="html">Key</title><subtitle>acmer archer rubyer</subtitle><entry><title type="html">How to connect wireless manully in Linux</title><link href="https://keyld.github.io//How-to-connect-wireless-manually-in-linux/" rel="alternate" type="text/html" title="How to connect wireless manully in Linux" /><published>2017-02-15T00:00:00+08:00</published><updated>2017-02-15T00:00:00+08:00</updated><id>https://keyld.github.io//How-to-connect-wireless-manually-in-linux</id><content type="html" xml:base="https://keyld.github.io//How-to-connect-wireless-manually-in-linux/">&lt;p&gt;无线网的连接在linux中总是会出现这样那样的问题（个人经历是这样的）。
尤其是学校的校园网，掉的真是恶心，一掉就再也连不上。
我曾经试过NetworkManager，connman，netctl等自动连接工具，但效果不佳。
非常无奈地我只能去学手动连接，发现居然十分稳定，只要连上去之后根本不会掉线。&lt;/p&gt;

&lt;p&gt;以下是手动连接的步骤&lt;/p&gt;

&lt;h2 id=&quot;0-配置准备&quot;&gt;0. 配置准备&lt;/h2&gt;

&lt;h3 id=&quot;01-我们所需要的工具有&quot;&gt;0.1 我们所需要的工具有&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;iw&lt;/li&gt;
  &lt;li&gt;ip&lt;/li&gt;
  &lt;li&gt;wpa_supplicant&lt;/li&gt;
  &lt;li&gt;dhcpcd&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这几个工具请读者自行安装，不同发行版软件包有所不同，我这里不详细阐述&lt;/p&gt;

&lt;h3 id=&quot;02-关闭所有自动连接服务&quot;&gt;0.2 关闭所有自动连接服务&lt;/h3&gt;
&lt;p&gt;这里必须强调一下&lt;strong&gt;自动连接服务的运行将导致手动连接无法起作用&lt;/strong&gt;
另一方面，我也說一下，不同的自动连接服务同时打开从而导致无法自动连接也是常见的问题
所以如果读者决定以后要尝试手动连接的话，请先把自动连接服务关闭&lt;/p&gt;

&lt;h4 id=&quot;关闭的方法&quot;&gt;关闭的方法&lt;/h4&gt;
&lt;p&gt;首先介绍一下管理服务的进程&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Linux系统中，init有以下三种主要的实现版本:&lt;/p&gt;
  &lt;ol&gt;
    &lt;li&gt;System V init:传统的顺序init(Sys V, 读作”sys-five”)，为Red Hat Enterprise Linux 和其他发行版使用&lt;/li&gt;
    &lt;li&gt;systemd 新出现的init。很多Linux发行版已经或者正在计划转向 systemd。&lt;/li&gt;
    &lt;li&gt;Ubuntu 上的init。不过在本书编写是，Ubuntu 也计划转向systemd&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;（选自《精通LInux》)&lt;/p&gt;

&lt;p&gt;主要就是以上三个，那我就以systemd介绍一下怎么关闭   (&lt;em&gt;会的读者可以自行跳过&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;systemctl status` 查看所有的服务&lt;/li&gt;
  &lt;li&gt;sytemctl stop &lt;Tab&gt;` 可以查看正在运行的服务(我这里用的是zsh，不知道bash可不可以&lt;/Tab&gt;&lt;/li&gt;
  &lt;li&gt;systemctl start/stop 服务名` 开启/关闭 该服务&lt;/li&gt;
  &lt;li&gt;systemctl enable/disable 服务名`   开机 自启/禁自启 该服务&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;至于哪些是自动连接服务，还请读者自行判断（因为太多了……&lt;/p&gt;

&lt;h2 id=&quot;1-获取相关信息&quot;&gt;1 获取相关信息&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;首先获取接口名  &lt;code class=&quot;highlighter-rouge&quot;&gt;iw dev&lt;/code&gt;
在interface后的就是你的主机借口名，我这里是wlp4s0&lt;/li&gt;
  &lt;li&gt;激活内核接口  &lt;code class=&quot;highlighter-rouge&quot;&gt;iw dev set wlp4s0 up&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;获取接口状态  &lt;code class=&quot;highlighter-rouge&quot;&gt;iw dev show wlp4s0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    3: wlp4s0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc mq state UP mode DEFAULT group defalt qlen 1000 link/ether b8:86:87:da:68:ba brd ff:ff:ff:ff:ff:ff
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;p&gt;其中 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt;&lt;/code&gt;中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;UP&lt;/code&gt;显示借口已经打开&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;查看接入点
&lt;code class=&quot;highlighter-rouge&quot;&gt;iw dev wlp4s0 scan | less&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;需要关注的信息：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;SSID:&lt;/strong&gt; 网络的名称&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Signal:&lt;/strong&gt; 用 dbm (-100 to 0) 报告的无线信号强度。数值越接近零，信号越好。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Security:&lt;/strong&gt;   没有直接报告, 检查 capability 开头的行，如果有 Privacy 信息，例如 capability: ESS Privacy ShortSlotTime (0x0411), 表示网络具有某种程度的保护.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;如果有 RSN 信息，网络被 Robust Security Network(WPA2) 协议保护。
如果有 WPA 信息，网络被 Wi-Fi Protected Access 协议保护。
在 RSN 和 WPA 信息块中，可能看到如下信息：
        Group cipher: 数值包括 TKIP, CCMP, both, others.
        Pairwise ciphers: 数值包括 TKIP, CCMP, both, others. 可能和 Group cipher 数值不同.
        Authentication suites: 数值包括 PSK, 802.1x, others. 家用路由器通常可以看到 PSK (i.e. 密码). 在大学中，通常会链接到需要登录名和密码的 802.1x 网络。需要知道其使用的密码管理方式(例如 EAP), 封装方法 (例如 PEAP). 详情请参考 这里 和 这里.        如果没有看到         RSN 或 WPA，但是看到了 Privacy, 表示使用的是 WEP.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(选自archwiki)&lt;/p&gt;

&lt;h2 id=&quot;2-关联&quot;&gt;2. 关联&lt;/h2&gt;

&lt;p&gt;假设我要连接的wifi ssid为 myssid&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;无加密
&lt;code class=&quot;highlighter-rouge&quot;&gt;iw wlp4s0 connect myssid&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;WEP
使用十六进制或 ASCII 密码(格式是自动识别出来的，因为 WEP 密码长度是固定的): 
&lt;code class=&quot;highlighter-rouge&quot;&gt;iw dev wlan0 connect your_essid key 0:your_key&lt;/code&gt; &lt;br /&gt;
使用十六进制或 ASCII 密码，第三个是默认 (从0计数，共四个): 
&lt;code class=&quot;highlighter-rouge&quot;&gt;iw dev wlan0 connect your_essid key d:2:your_key&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;WPA/WPA2
&lt;code class=&quot;highlighter-rouge&quot;&gt;wpa_supplicant -B -i wlp4s0 -c &amp;lt;(wpa_passphrase your_SSID your_key)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后可以通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;iw dev wlp4s0 link&lt;/code&gt;确认是否已经连接成功&lt;/p&gt;

&lt;h2 id=&quot;3-获取ip&quot;&gt;3. 获取ip&lt;/h2&gt;
&lt;p&gt;这里我使用dhcp&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dhcpcd wlp4s0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;其实还可以使用静态ip分配，但是我没用过，这里是archwiki的写法&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ip addr add 192.168.0.2/24 dev wlp4s0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ip route add default via 192.168.0.1&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;现在我以学校校园网为例，简单示范一下，其实只需要三行命令&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ip link set wlp4s0&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;iw wlp4s0 connect WUST_Wireless&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dhcpcd wlp4s0&lt;/code&gt;
最后再随便开个网页登陆即可&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后，假如这样连接又断了怎么办呢，说实话，我用到现在还没有断过，如果真的断了，那就先kill进程，再同样的方法重新连接就好了。&lt;/p&gt;</content><category term="Linux" /><category term="Network" /><summary type="html">详细介绍如何手动连接无线网络</summary></entry></feed>
